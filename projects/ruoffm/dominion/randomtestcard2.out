Testing Village Card
Test: 0 
current size of hand 415
current size of hand after smithy should be +2 417
Test Passed
Test: 1 
current size of hand 149
current size of hand after smithy should be +2 151
Test Passed
Test: 2 
current size of hand 59
current size of hand after smithy should be +2 61
Test Passed
Test: 3 
current size of hand 172
current size of hand after smithy should be +2 174
Test Passed
Test: 4 
current size of hand 429
current size of hand after smithy should be +2 431
Test Passed
Test: 5 
current size of hand 67
current size of hand after smithy should be +2 69
Test Passed
Test: 6 
current size of hand 58
current size of hand after smithy should be +2 60
Test Passed
Test: 7 
current size of hand 11
current size of hand after smithy should be +2 13
Test Passed
Test: 8 
current size of hand 419
current size of hand after smithy should be +2 421
Test Passed
Test: 9 
current size of hand 315
current size of hand after smithy should be +2 315
Hand Size is 315, should be 317
Bug in Smithy
Test: 10 
current size of hand 480
current size of hand after smithy should be +2 482
Test Passed
Test: 11 
current size of hand 496
current size of hand after smithy should be +2 498
Test Passed
Test: 12 
current size of hand 327
current size of hand after smithy should be +2 327
Hand Size is 327, should be 329
Bug in Smithy
Test: 13 
current size of hand 313
current size of hand after smithy should be +2 313
Hand Size is 313, should be 315
Bug in Smithy
Test: 14 
current size of hand 45
current size of hand after smithy should be +2 45
Hand Size is 45, should be 47
Bug in Smithy
Test: 15 
current size of hand 43
current size of hand after smithy should be +2 43
Hand Size is 43, should be 45
Bug in Smithy
Test: 16 
current size of hand 178
current size of hand after smithy should be +2 180
Test Passed
Test: 17 
current size of hand 254
current size of hand after smithy should be +2 256
Test Passed
Test: 18 
current size of hand 368
current size of hand after smithy should be +2 370
Test Passed
Test: 19 
current size of hand 94
current size of hand after smithy should be +2 96
Test Passed
Test: 20 
current size of hand 378
current size of hand after smithy should be +2 378
Hand Size is 378, should be 380
Bug in Smithy
Test: 21 
current size of hand 317
current size of hand after smithy should be +2 317
Hand Size is 317, should be 319
Bug in Smithy
Test: 22 
current size of hand 280
current size of hand after smithy should be +2 282
Test Passed
Test: 23 
current size of hand 444
current size of hand after smithy should be +2 444
Hand Size is 444, should be 446
Bug in Smithy
Test: 24 
current size of hand 117
current size of hand after smithy should be +2 119
Test Passed
Test: 25 
current size of hand 209
current size of hand after smithy should be +2 211
Test Passed
Test: 26 
current size of hand 353
current size of hand after smithy should be +2 355
Test Passed
Test: 27 
current size of hand 219
current size of hand after smithy should be +2 221
Test Passed
Test: 28 
current size of hand 329
current size of hand after smithy should be +2 331
Test Passed
Test: 29 
current size of hand 208
current size of hand after smithy should be +2 210
Test Passed
Test: 30 
current size of hand 223
current size of hand after smithy should be +2 225
Test Passed
Test: 31 
current size of hand 421
current size of hand after smithy should be +2 423
Test Passed
Test: 32 
current size of hand 228
current size of hand after smithy should be +2 228
Hand Size is 228, should be 230
Bug in Smithy
Test: 33 
current size of hand 34
current size of hand after smithy should be +2 36
Test Passed
Test: 34 
current size of hand 356
current size of hand after smithy should be +2 358
Test Passed
Test: 35 
current size of hand 359
current size of hand after smithy should be +2 361
Test Passed
Test: 36 
current size of hand 228
current size of hand after smithy should be +2 230
Test Passed
Test: 37 
current size of hand 358
current size of hand after smithy should be +2 360
Test Passed
Test: 38 
current size of hand 293
current size of hand after smithy should be +2 295
Test Passed
Test: 39 
current size of hand 428
current size of hand after smithy should be +2 430
Test Passed
Test: 40 
current size of hand 263
current size of hand after smithy should be +2 265
Test Passed
Test: 41 
current size of hand 404
current size of hand after smithy should be +2 406
Test Passed
Test: 42 
current size of hand 417
current size of hand after smithy should be +2 417
Hand Size is 417, should be 419
Bug in Smithy
Test: 43 
current size of hand 470
current size of hand after smithy should be +2 470
Hand Size is 470, should be 472
Bug in Smithy
Test: 44 
current size of hand 225
current size of hand after smithy should be +2 227
Test Passed
Test: 45 
current size of hand 454
current size of hand after smithy should be +2 454
Hand Size is 454, should be 456
Bug in Smithy
Test: 46 
current size of hand 464
current size of hand after smithy should be +2 464
Hand Size is 464, should be 466
Bug in Smithy
Test: 47 
current size of hand 348
current size of hand after smithy should be +2 348
Hand Size is 348, should be 350
Bug in Smithy
Test: 48 
current size of hand 343
current size of hand after smithy should be +2 343
Hand Size is 343, should be 345
Bug in Smithy
Test: 49 
current size of hand 311
current size of hand after smithy should be +2 313
Test Passed
Test: 50 
current size of hand 230
current size of hand after smithy should be +2 232
Test Passed
Test: 51 
current size of hand 444
current size of hand after smithy should be +2 446
Test Passed
Test: 52 
current size of hand 416
current size of hand after smithy should be +2 418
Test Passed
Test: 53 
current size of hand 62
current size of hand after smithy should be +2 64
Test Passed
Test: 54 
current size of hand 399
current size of hand after smithy should be +2 401
Test Passed
Test: 55 
current size of hand 473
current size of hand after smithy should be +2 475
Test Passed
Test: 56 
current size of hand 394
current size of hand after smithy should be +2 396
Test Passed
Test: 57 
current size of hand 399
current size of hand after smithy should be +2 401
Test Passed
Test: 58 
current size of hand 168
current size of hand after smithy should be +2 170
Test Passed
Test: 59 
current size of hand 84
current size of hand after smithy should be +2 86
Test Passed
Test: 60 
current size of hand 42
current size of hand after smithy should be +2 44
Test Passed
Test: 61 
current size of hand 179
current size of hand after smithy should be +2 181
Test Passed
Test: 62 
current size of hand 172
current size of hand after smithy should be +2 174
Test Passed
Test: 63 
current size of hand 342
current size of hand after smithy should be +2 344
Test Passed
Test: 64 
current size of hand 372
current size of hand after smithy should be +2 374
Test Passed
Test: 65 
current size of hand 221
current size of hand after smithy should be +2 221
Hand Size is 221, should be 223
Bug in Smithy
Test: 66 
current size of hand 167
current size of hand after smithy should be +2 169
Test Passed
Test: 67 
current size of hand 484
current size of hand after smithy should be +2 486
Test Passed
Test: 68 
current size of hand 269
current size of hand after smithy should be +2 271
Test Passed
Test: 69 
current size of hand 292
current size of hand after smithy should be +2 292
Hand Size is 292, should be 294
Bug in Smithy
Test: 70 
current size of hand 385
current size of hand after smithy should be +2 387
Test Passed
Test: 71 
current size of hand 398
current size of hand after smithy should be +2 400
Test Passed
Test: 72 
current size of hand 90
current size of hand after smithy should be +2 90
Hand Size is 90, should be 92
Bug in Smithy
Test: 73 
current size of hand 232
current size of hand after smithy should be +2 234
Test Passed
Test: 74 
current size of hand 269
current size of hand after smithy should be +2 269
Hand Size is 269, should be 271
Bug in Smithy
Test: 75 
current size of hand 360
current size of hand after smithy should be +2 362
Test Passed
Test: 76 
current size of hand 205
current size of hand after smithy should be +2 207
Test Passed
Test: 77 
current size of hand 461
current size of hand after smithy should be +2 463
Test Passed
Test: 78 
current size of hand 202
current size of hand after smithy should be +2 202
Hand Size is 202, should be 204
Bug in Smithy
Test: 79 
current size of hand 342
current size of hand after smithy should be +2 344
Test Passed
Test: 80 
current size of hand 408
current size of hand after smithy should be +2 410
Test Passed
Test: 81 
current size of hand 253
current size of hand after smithy should be +2 255
Test Passed
Test: 82 
current size of hand 148
current size of hand after smithy should be +2 150
Test Passed
Test: 83 
current size of hand 368
current size of hand after smithy should be +2 370
Test Passed
Test: 84 
current size of hand 297
current size of hand after smithy should be +2 299
Test Passed
Test: 85 
current size of hand 363
current size of hand after smithy should be +2 365
Test Passed
Test: 86 
current size of hand 125
current size of hand after smithy should be +2 127
Test Passed
Test: 87 
current size of hand 157
current size of hand after smithy should be +2 159
Test Passed
Test: 88 
current size of hand 421
current size of hand after smithy should be +2 421
Hand Size is 421, should be 423
Bug in Smithy
Test: 89 
current size of hand 50
current size of hand after smithy should be +2 52
Test Passed
Test: 90 
current size of hand 197
current size of hand after smithy should be +2 197
Hand Size is 197, should be 199
Bug in Smithy
Test: 91 
current size of hand 428
current size of hand after smithy should be +2 430
Test Passed
Test: 92 
current size of hand 38
current size of hand after smithy should be +2 40
Test Passed
Test: 93 
current size of hand 339
current size of hand after smithy should be +2 339
Hand Size is 339, should be 341
Bug in Smithy
Test: 94 
current size of hand 129
current size of hand after smithy should be +2 129
Hand Size is 129, should be 131
Bug in Smithy
Test: 95 
current size of hand 343
current size of hand after smithy should be +2 343
Hand Size is 343, should be 345
Bug in Smithy
Test: 96 
current size of hand 471
current size of hand after smithy should be +2 471
Hand Size is 471, should be 473
Bug in Smithy
Test: 97 
current size of hand 292
current size of hand after smithy should be +2 291
Hand Size is 291, should be 294
Bug in Smithy
Test: 98 
current size of hand 390
current size of hand after smithy should be +2 390
Hand Size is 390, should be 392
Bug in Smithy
Test: 99 
current size of hand 326
current size of hand after smithy should be +2 326
Hand Size is 326, should be 328
Bug in Smithy
Test: 100 
current size of hand 117
current size of hand after smithy should be +2 119
Test Passed
Test: 101 
current size of hand 190
current size of hand after smithy should be +2 190
Hand Size is 190, should be 192
Bug in Smithy
Test: 102 
current size of hand 234
current size of hand after smithy should be +2 236
Test Passed
Test: 103 
current size of hand 114
current size of hand after smithy should be +2 116
Test Passed
Test: 104 
current size of hand 386
current size of hand after smithy should be +2 388
Test Passed
Test: 105 
current size of hand 416
current size of hand after smithy should be +2 416
Hand Size is 416, should be 418
Bug in Smithy
Test: 106 
current size of hand 290
current size of hand after smithy should be +2 292
Test Passed
Test: 107 
current size of hand 131
current size of hand after smithy should be +2 133
Test Passed
Test: 108 
current size of hand 386
current size of hand after smithy should be +2 388
Test Passed
Test: 109 
current size of hand 412
current size of hand after smithy should be +2 414
Test Passed
Test: 110 
current size of hand 274
current size of hand after smithy should be +2 274
Hand Size is 274, should be 276
Bug in Smithy
Test: 111 
current size of hand 487
current size of hand after smithy should be +2 489
Test Passed
Test: 112 
current size of hand 284
current size of hand after smithy should be +2 286
Test Passed
Test: 113 
current size of hand 349
current size of hand after smithy should be +2 351
Test Passed
Test: 114 
current size of hand 18
current size of hand after smithy should be +2 20
Test Passed
Test: 115 
current size of hand 373
current size of hand after smithy should be +2 375
Test Passed
Test: 116 
current size of hand 478
current size of hand after smithy should be +2 480
Test Passed
Test: 117 
current size of hand 100
current size of hand after smithy should be +2 100
Hand Size is 100, should be 102
Bug in Smithy
Test: 118 
current size of hand 388
current size of hand after smithy should be +2 390
Test Passed
Test: 119 
current size of hand 493
current size of hand after smithy should be +2 495
Test Passed
Test: 120 
current size of hand 339
current size of hand after smithy should be +2 341
Test Passed
Test: 121 
current size of hand 173
current size of hand after smithy should be +2 173
Hand Size is 173, should be 175
Bug in Smithy
Test: 122 
current size of hand 390
current size of hand after smithy should be +2 390
Hand Size is 390, should be 392
Bug in Smithy
Test: 123 
current size of hand 21
current size of hand after smithy should be +2 23
Test Passed
Test: 124 
current size of hand 451
current size of hand after smithy should be +2 453
Test Passed
Test: 125 
current size of hand 54
current size of hand after smithy should be +2 56
Test Passed
Test: 126 
current size of hand 16
current size of hand after smithy should be +2 18
Test Passed
Test: 127 
current size of hand 296
current size of hand after smithy should be +2 298
Test Passed
Test: 128 
current size of hand 21
current size of hand after smithy should be +2 23
Test Passed
Test: 129 
current size of hand 477
current size of hand after smithy should be +2 478
Hand Size is 478, should be 479
Bug in Smithy
Test: 130 
current size of hand 483
current size of hand after smithy should be +2 485
Test Passed
Test: 131 
current size of hand 499
current size of hand after smithy should be +2 499
Hand Size is 499, should be 501
Bug in Smithy
Test: 132 
current size of hand 60
current size of hand after smithy should be +2 62
Test Passed
Test: 133 
current size of hand 244
current size of hand after smithy should be +2 244
Hand Size is 244, should be 246
Bug in Smithy
Test: 134 
current size of hand 375
current size of hand after smithy should be +2 377
Test Passed
Test: 135 
current size of hand 493
current size of hand after smithy should be +2 495
Test Passed
Test: 136 
current size of hand 482
current size of hand after smithy should be +2 484
Test Passed
Test: 137 
current size of hand 126
current size of hand after smithy should be +2 126
Hand Size is 126, should be 128
Bug in Smithy
Test: 138 
current size of hand 74
current size of hand after smithy should be +2 74
Hand Size is 74, should be 76
Bug in Smithy
Test: 139 
current size of hand 262
current size of hand after smithy should be +2 262
Hand Size is 262, should be 264
Bug in Smithy
Test: 140 
current size of hand 232
current size of hand after smithy should be +2 234
Test Passed
Test: 141 
current size of hand 137
current size of hand after smithy should be +2 139
Test Passed
Test: 142 
current size of hand 328
current size of hand after smithy should be +2 330
Test Passed
Test: 143 
current size of hand 217
current size of hand after smithy should be +2 219
Test Passed
Test: 144 
current size of hand 358
current size of hand after smithy should be +2 360
Test Passed
Test: 145 
current size of hand 133
current size of hand after smithy should be +2 135
Test Passed
Test: 146 
current size of hand 351
current size of hand after smithy should be +2 351
Hand Size is 351, should be 353
Bug in Smithy
Test: 147 
current size of hand 485
current size of hand after smithy should be +2 485
Hand Size is 485, should be 487
Bug in Smithy
Test: 148 
current size of hand 120
current size of hand after smithy should be +2 120
Hand Size is 120, should be 122
Bug in Smithy
Test: 149 
current size of hand 96
current size of hand after smithy should be +2 98
Test Passed
Test: 150 
current size of hand 455
current size of hand after smithy should be +2 457
Test Passed
Test: 151 
current size of hand 32
current size of hand after smithy should be +2 34
Test Passed
Test: 152 
current size of hand 484
current size of hand after smithy should be +2 486
Test Passed
Test: 153 
current size of hand 283
current size of hand after smithy should be +2 285
Test Passed
Test: 154 
current size of hand 347
current size of hand after smithy should be +2 349
Test Passed
Test: 155 
current size of hand 59
current size of hand after smithy should be +2 59
Hand Size is 59, should be 61
Bug in Smithy
Test: 156 
current size of hand 435
current size of hand after smithy should be +2 435
Hand Size is 435, should be 437
Bug in Smithy
Test: 157 
current size of hand 398
current size of hand after smithy should be +2 398
Hand Size is 398, should be 400
Bug in Smithy
Test: 158 
current size of hand 262
current size of hand after smithy should be +2 262
Hand Size is 262, should be 264
Bug in Smithy
Test: 159 
current size of hand 223
current size of hand after smithy should be +2 223
Hand Size is 223, should be 225
Bug in Smithy
Test: 160 
current size of hand 335
current size of hand after smithy should be +2 335
Hand Size is 335, should be 337
Bug in Smithy
Test: 161 
current size of hand 171
current size of hand after smithy should be +2 173
Test Passed
Test: 162 
current size of hand 203
current size of hand after smithy should be +2 205
Test Passed
Test: 163 
current size of hand 228
current size of hand after smithy should be +2 228
Hand Size is 228, should be 230
Bug in Smithy
Test: 164 
current size of hand 308
current size of hand after smithy should be +2 308
Hand Size is 308, should be 310
Bug in Smithy
Test: 165 
current size of hand 398
current size of hand after smithy should be +2 400
Test Passed
Test: 166 
current size of hand 59
current size of hand after smithy should be +2 59
Hand Size is 59, should be 61
Bug in Smithy
Test: 167 
current size of hand 109
current size of hand after smithy should be +2 109
Hand Size is 109, should be 111
Bug in Smithy
Test: 168 
current size of hand 53
current size of hand after smithy should be +2 53
Hand Size is 53, should be 55
Bug in Smithy
Test: 169 
current size of hand 426
current size of hand after smithy should be +2 426
Hand Size is 426, should be 428
Bug in Smithy
Test: 170 
current size of hand 231
current size of hand after smithy should be +2 233
Test Passed
Test: 171 
current size of hand 350
current size of hand after smithy should be +2 352
Test Passed
Test: 172 
current size of hand 131
current size of hand after smithy should be +2 133
Test Passed
Test: 173 
current size of hand 81
current size of hand after smithy should be +2 83
Test Passed
Test: 174 
current size of hand 181
current size of hand after smithy should be +2 183
Test Passed
Test: 175 
current size of hand 404
current size of hand after smithy should be +2 406
Test Passed
Test: 176 
current size of hand 32
current size of hand after smithy should be +2 34
Test Passed
Test: 177 
current size of hand 57
current size of hand after smithy should be +2 59
Test Passed
Test: 178 
current size of hand 297
current size of hand after smithy should be +2 299
Test Passed
Test: 179 
current size of hand 309
current size of hand after smithy should be +2 311
Test Passed
Test: 180 
current size of hand 266
current size of hand after smithy should be +2 268
Test Passed
Test: 181 
current size of hand 185
current size of hand after smithy should be +2 187
Test Passed
Test: 182 
current size of hand 83
current size of hand after smithy should be +2 85
Test Passed
Test: 183 
current size of hand 392
current size of hand after smithy should be +2 394
Test Passed
Test: 184 
current size of hand 490
current size of hand after smithy should be +2 492
Test Passed
Test: 185 
current size of hand 337
current size of hand after smithy should be +2 339
Test Passed
Test: 186 
current size of hand 455
current size of hand after smithy should be +2 457
Test Passed
Test: 187 
current size of hand 437
current size of hand after smithy should be +2 439
Test Passed
Test: 188 
current size of hand 350
current size of hand after smithy should be +2 352
Test Passed
Test: 189 
current size of hand 269
current size of hand after smithy should be +2 271
Test Passed
Test: 190 
current size of hand 28
current size of hand after smithy should be +2 30
Test Passed
Test: 191 
current size of hand 393
current size of hand after smithy should be +2 395
Test Passed
Test: 192 
current size of hand 52
current size of hand after smithy should be +2 52
Hand Size is 52, should be 54
Bug in Smithy
Test: 193 
current size of hand 157
current size of hand after smithy should be +2 157
Hand Size is 157, should be 159
Bug in Smithy
Test: 194 
current size of hand 235
current size of hand after smithy should be +2 237
Test Passed
Test: 195 
current size of hand 276
current size of hand after smithy should be +2 278
Test Passed
Test: 196 
current size of hand 28
current size of hand after smithy should be +2 28
Hand Size is 28, should be 30
Bug in Smithy
Test: 197 
current size of hand 55
current size of hand after smithy should be +2 57
Test Passed
Test: 198 
current size of hand 325
current size of hand after smithy should be +2 327
Test Passed
Test: 199 
current size of hand 382
current size of hand after smithy should be +2 384
Test Passed
Test: 200 
current size of hand 334
current size of hand after smithy should be +2 334
Hand Size is 334, should be 336
Bug in Smithy
Test: 201 
current size of hand 354
current size of hand after smithy should be +2 356
Test Passed
Test: 202 
current size of hand 216
current size of hand after smithy should be +2 218
Test Passed
Test: 203 
current size of hand 399
current size of hand after smithy should be +2 401
Test Passed
Test: 204 
current size of hand 6
current size of hand after smithy should be +2 8
Test Passed
Test: 205 
current size of hand 491
current size of hand after smithy should be +2 493
Test Passed
Test: 206 
current size of hand 328
current size of hand after smithy should be +2 328
Hand Size is 328, should be 330
Bug in Smithy
Test: 207 
current size of hand 90
current size of hand after smithy should be +2 92
Test Passed
Test: 208 
current size of hand 11
current size of hand after smithy should be +2 13
Test Passed
Test: 209 
current size of hand 351
current size of hand after smithy should be +2 353
Test Passed
Test: 210 
current size of hand 167
current size of hand after smithy should be +2 169
Test Passed
Test: 211 
current size of hand 104
current size of hand after smithy should be +2 104
Hand Size is 104, should be 106
Bug in Smithy
Test: 212 
current size of hand 38
current size of hand after smithy should be +2 38
Hand Size is 38, should be 40
Bug in Smithy
Test: 213 
current size of hand 344
current size of hand after smithy should be +2 346
Test Passed
Test: 214 
current size of hand 314
current size of hand after smithy should be +2 316
Test Passed
Test: 215 
current size of hand 469
current size of hand after smithy should be +2 469
Hand Size is 469, should be 471
Bug in Smithy
Test: 216 
current size of hand 290
current size of hand after smithy should be +2 290
Hand Size is 290, should be 292
Bug in Smithy
Test: 217 
current size of hand 264
current size of hand after smithy should be +2 266
Test Passed
Test: 218 
current size of hand 313
current size of hand after smithy should be +2 315
Test Passed
Test: 219 
current size of hand 155
current size of hand after smithy should be +2 157
Test Passed
Test: 220 
current size of hand 433
current size of hand after smithy should be +2 435
Test Passed
Test: 221 
current size of hand 177
current size of hand after smithy should be +2 179
Test Passed
Test: 222 
current size of hand 490
current size of hand after smithy should be +2 492
Test Passed
Test: 223 
current size of hand 75
current size of hand after smithy should be +2 75
Hand Size is 75, should be 77
Bug in Smithy
Test: 224 
current size of hand 419
current size of hand after smithy should be +2 419
Hand Size is 419, should be 421
Bug in Smithy
Test: 225 
current size of hand 51
current size of hand after smithy should be +2 51
Hand Size is 51, should be 53
Bug in Smithy
Test: 226 
current size of hand 343
current size of hand after smithy should be +2 342
Hand Size is 342, should be 345
Bug in Smithy
Test: 227 
current size of hand 166
current size of hand after smithy should be +2 168
Test Passed
Test: 228 
current size of hand 229
current size of hand after smithy should be +2 231
Test Passed
Test: 229 
current size of hand 174
current size of hand after smithy should be +2 176
Test Passed
Test: 230 
current size of hand 377
current size of hand after smithy should be +2 379
Test Passed
Test: 231 
current size of hand 62
current size of hand after smithy should be +2 64
Test Passed
Test: 232 
current size of hand 418
current size of hand after smithy should be +2 420
Test Passed
Test: 233 
current size of hand 480
current size of hand after smithy should be +2 480
Hand Size is 480, should be 482
Bug in Smithy
Test: 234 
current size of hand 30
current size of hand after smithy should be +2 32
Test Passed
DEBUGTest: 235 
current size of hand 62
current size of hand after smithy should be +2 64
Test Passed
Test: 236 
current size of hand 402
current size of hand after smithy should be +2 404
Test Passed
Test: 237 
current size of hand 289
current size of hand after smithy should be +2 291
Test Passed
Test: 238 
current size of hand 57
current size of hand after smithy should be +2 59
Test Passed
Test: 239 
current size of hand 405
current size of hand after smithy should be +2 407
Test Passed
Test: 240 
current size of hand 270
current size of hand after smithy should be +2 272
Test Passed
Test: 241 
current size of hand 180
current size of hand after smithy should be +2 182
Test Passed
Test: 242 
current size of hand 88
current size of hand after smithy should be +2 88
Hand Size is 88, should be 90
Bug in Smithy
Test: 243 
current size of hand 469
current size of hand after smithy should be +2 469
Hand Size is 469, should be 471
Bug in Smithy
Test: 244 
current size of hand 163
current size of hand after smithy should be +2 165
Test Passed
Test: 245 
current size of hand 499
current size of hand after smithy should be +2 499
Hand Size is 499, should be 501
Bug in Smithy
Test: 246 
current size of hand 330
current size of hand after smithy should be +2 332
Test Passed
Test: 247 
current size of hand 186
current size of hand after smithy should be +2 188
Test Passed
Test: 248 
current size of hand 387
current size of hand after smithy should be +2 389
Test Passed
Test: 249 
current size of hand 19
current size of hand after smithy should be +2 21
Test Passed
Test: 250 
current size of hand 139
current size of hand after smithy should be +2 139
Hand Size is 139, should be 141
Bug in Smithy
Test: 251 
current size of hand 212
current size of hand after smithy should be +2 212
Hand Size is 212, should be 214
Bug in Smithy
Test: 252 
current size of hand 299
current size of hand after smithy should be +2 301
Test Passed
Test: 253 
current size of hand 87
current size of hand after smithy should be +2 89
Test Passed
Test: 254 
current size of hand 302
current size of hand after smithy should be +2 304
Test Passed
Test: 255 
current size of hand 205
current size of hand after smithy should be +2 207
Test Passed
Test: 256 
current size of hand 329
current size of hand after smithy should be +2 331
Test Passed
Test: 257 
current size of hand 22
current size of hand after smithy should be +2 24
Test Passed
Test: 258 
current size of hand 28
current size of hand after smithy should be +2 30
Test Passed
Test: 259 
current size of hand 382
current size of hand after smithy should be +2 384
Test Passed
Test: 260 
current size of hand 386
current size of hand after smithy should be +2 386
Hand Size is 386, should be 388
Bug in Smithy
Test: 261 
current size of hand 36
current size of hand after smithy should be +2 36
Hand Size is 36, should be 38
Bug in Smithy
Test: 262 
current size of hand 164
current size of hand after smithy should be +2 166
Test Passed
Test: 263 
current size of hand 494
current size of hand after smithy should be +2 496
Test Passed
Test: 264 
current size of hand 484
current size of hand after smithy should be +2 486
Test Passed
Test: 265 
current size of hand 209
current size of hand after smithy should be +2 211
Test Passed
Test: 266 
current size of hand 245
current size of hand after smithy should be +2 245
Hand Size is 245, should be 247
Bug in Smithy
Test: 267 
current size of hand 69
current size of hand after smithy should be +2 71
Test Passed
Test: 268 
current size of hand 71
current size of hand after smithy should be +2 73
Test Passed
Test: 269 
current size of hand 91
current size of hand after smithy should be +2 93
Test Passed
Test: 270 
current size of hand 312
current size of hand after smithy should be +2 314
Test Passed
Test: 271 
current size of hand 213
current size of hand after smithy should be +2 215
Test Passed
Test: 272 
current size of hand 68
current size of hand after smithy should be +2 68
Hand Size is 68, should be 70
Bug in Smithy
Test: 273 
current size of hand 437
current size of hand after smithy should be +2 437
Hand Size is 437, should be 439
Bug in Smithy
Test: 274 
current size of hand 202
current size of hand after smithy should be +2 202
Hand Size is 202, should be 204
Bug in Smithy
Test: 275 
current size of hand 304
current size of hand after smithy should be +2 306
Test Passed
Test: 276 
current size of hand 225
current size of hand after smithy should be +2 227
Test Passed
Test: 277 
current size of hand 226
current size of hand after smithy should be +2 228
Test Passed
Test: 278 
current size of hand 452
current size of hand after smithy should be +2 454
Test Passed
Test: 279 
current size of hand 111
current size of hand after smithy should be +2 111
Hand Size is 111, should be 113
Bug in Smithy
Test: 280 
current size of hand 42
current size of hand after smithy should be +2 44
Test Passed
Test: 281 
current size of hand 96
current size of hand after smithy should be +2 96
Hand Size is 96, should be 98
Bug in Smithy
Test: 282 
current size of hand 257
current size of hand after smithy should be +2 257
Hand Size is 257, should be 259
Bug in Smithy
Test: 283 
current size of hand 332
current size of hand after smithy should be +2 334
Test Passed
Test: 284 
current size of hand 135
current size of hand after smithy should be +2 137
Test Passed
Test: 285 
current size of hand 437
current size of hand after smithy should be +2 439
Test Passed
Test: 286 
current size of hand 301
current size of hand after smithy should be +2 301
Hand Size is 301, should be 303
Bug in Smithy
Test: 287 
current size of hand 496
current size of hand after smithy should be +2 496
Hand Size is 496, should be 498
Bug in Smithy
Test: 288 
current size of hand 304
current size of hand after smithy should be +2 306
Test Passed
Test: 289 
current size of hand 251
current size of hand after smithy should be +2 253
Test Passed
Test: 290 
current size of hand 204
current size of hand after smithy should be +2 204
Hand Size is 204, should be 206
Bug in Smithy
Test: 291 
current size of hand 79
current size of hand after smithy should be +2 81
Test Passed
Test: 292 
current size of hand 131
current size of hand after smithy should be +2 131
Hand Size is 131, should be 133
Bug in Smithy
Test: 293 
current size of hand 28
current size of hand after smithy should be +2 28
Hand Size is 28, should be 30
Bug in Smithy
Test: 294 
current size of hand 81
current size of hand after smithy should be +2 80
Hand Size is 80, should be 83
Bug in Smithy
Test: 295 
current size of hand 143
current size of hand after smithy should be +2 143
Hand Size is 143, should be 145
Bug in Smithy
Test: 296 
current size of hand 180
current size of hand after smithy should be +2 182
Test Passed
Test: 297 
current size of hand 463
current size of hand after smithy should be +2 465
Test Passed
Test: 298 
current size of hand 179
current size of hand after smithy should be +2 181
Test Passed
Test: 299 
current size of hand 472
current size of hand after smithy should be +2 474
Test Passed
Test: 300 
current size of hand 248
current size of hand after smithy should be +2 250
Test Passed
Test: 301 
current size of hand 412
current size of hand after smithy should be +2 414
Test Passed
Test: 302 
current size of hand 197
current size of hand after smithy should be +2 199
Test Passed
Test: 303 
current size of hand 107
current size of hand after smithy should be +2 109
Test Passed
Test: 304 
current size of hand 406
current size of hand after smithy should be +2 408
Test Passed
Test: 305 
current size of hand 428
current size of hand after smithy should be +2 428
Hand Size is 428, should be 430
Bug in Smithy
Test: 306 
current size of hand 60
current size of hand after smithy should be +2 62
Test Passed
Test: 307 
current size of hand 100
current size of hand after smithy should be +2 102
Test Passed
Test: 308 
current size of hand 313
current size of hand after smithy should be +2 313
Hand Size is 313, should be 315
Bug in Smithy
Test: 309 
current size of hand 85
current size of hand after smithy should be +2 85
Hand Size is 85, should be 87
Bug in Smithy
Test: 310 
current size of hand 126
current size of hand after smithy should be +2 128
Test Passed
Test: 311 
current size of hand 252
current size of hand after smithy should be +2 252
Hand Size is 252, should be 254
Bug in Smithy
Test: 312 
current size of hand 333
current size of hand after smithy should be +2 335
Test Passed
Test: 313 
current size of hand 26
current size of hand after smithy should be +2 26
Hand Size is 26, should be 28
Bug in Smithy
Test: 314 
current size of hand 263
current size of hand after smithy should be +2 263
Hand Size is 263, should be 265
Bug in Smithy
Test: 315 
current size of hand 275
current size of hand after smithy should be +2 277
Test Passed
Test: 316 
current size of hand 326
current size of hand after smithy should be +2 328
Test Passed
Test: 317 
current size of hand 134
current size of hand after smithy should be +2 134
Hand Size is 134, should be 136
Bug in Smithy
Test: 318 
current size of hand 303
current size of hand after smithy should be +2 305
Test Passed
Test: 319 
current size of hand 307
current size of hand after smithy should be +2 307
Hand Size is 307, should be 309
Bug in Smithy
Test: 320 
current size of hand 315
current size of hand after smithy should be +2 317
Test Passed
Test: 321 
current size of hand 465
current size of hand after smithy should be +2 467
Test Passed
Test: 322 
current size of hand 37
current size of hand after smithy should be +2 39
Test Passed
Test: 323 
current size of hand 360
current size of hand after smithy should be +2 362
Test Passed
Test: 324 
current size of hand 293
current size of hand after smithy should be +2 295
Test Passed
Test: 325 
current size of hand 162
current size of hand after smithy should be +2 164
Test Passed
Test: 326 
current size of hand 466
current size of hand after smithy should be +2 468
Test Passed
Test: 327 
current size of hand 234
current size of hand after smithy should be +2 236
Test Passed
Test: 328 
current size of hand 133
current size of hand after smithy should be +2 135
Test Passed
Test: 329 
current size of hand 213
current size of hand after smithy should be +2 215
Test Passed
Test: 330 
current size of hand 323
current size of hand after smithy should be +2 325
Test Passed
Test: 331 
current size of hand 311
current size of hand after smithy should be +2 313
Test Passed
Test: 332 
current size of hand 183
current size of hand after smithy should be +2 185
Test Passed
Test: 333 
current size of hand 464
current size of hand after smithy should be +2 464
Hand Size is 464, should be 466
Bug in Smithy
Test: 334 
current size of hand 391
current size of hand after smithy should be +2 393
Test Passed
Test: 335 
current size of hand 57
current size of hand after smithy should be +2 59
Test Passed
Test: 336 
current size of hand 120
current size of hand after smithy should be +2 122
Test Passed
Test: 337 
current size of hand 96
current size of hand after smithy should be +2 98
Test Passed
Test: 338 
current size of hand 197
current size of hand after smithy should be +2 199
Test Passed
Test: 339 
current size of hand 433
current size of hand after smithy should be +2 435
Test Passed
Test: 340 
current size of hand 29
current size of hand after smithy should be +2 29
Hand Size is 29, should be 31
Bug in Smithy
Test: 341 
current size of hand 129
current size of hand after smithy should be +2 131
Test Passed
Test: 342 
current size of hand 468
current size of hand after smithy should be +2 470
Test Passed
Test: 343 
current size of hand 25
current size of hand after smithy should be +2 27
Test Passed
Test: 344 
current size of hand 220
current size of hand after smithy should be +2 222
Test Passed
Test: 345 
current size of hand 40
current size of hand after smithy should be +2 42
Test Passed
Test: 346 
current size of hand 127
current size of hand after smithy should be +2 129
Test Passed
Test: 347 
current size of hand 227
current size of hand after smithy should be +2 229
Test Passed
Test: 348 
current size of hand 160
current size of hand after smithy should be +2 162
Test Passed
Test: 349 
current size of hand 382
current size of hand after smithy should be +2 384
Test Passed
Test: 350 
current size of hand 63
current size of hand after smithy should be +2 65
Test Passed
Test: 351 
current size of hand 198
current size of hand after smithy should be +2 200
Test Passed
Test: 352 
current size of hand 173
current size of hand after smithy should be +2 173
Hand Size is 173, should be 175
Bug in Smithy
Test: 353 
current size of hand 57
current size of hand after smithy should be +2 57
Hand Size is 57, should be 59
Bug in Smithy
Test: 354 
current size of hand 44
current size of hand after smithy should be +2 46
Test Passed
Test: 355 
current size of hand 355
current size of hand after smithy should be +2 355
Hand Size is 355, should be 357
Bug in Smithy
Test: 356 
current size of hand 259
current size of hand after smithy should be +2 259
Hand Size is 259, should be 261
Bug in Smithy
Test: 357 
current size of hand 138
current size of hand after smithy should be +2 140
Test Passed
Test: 358 
current size of hand 422
current size of hand after smithy should be +2 422
Hand Size is 422, should be 424
Bug in Smithy
Test: 359 
current size of hand 280
current size of hand after smithy should be +2 282
Test Passed
Test: 360 
current size of hand 320
current size of hand after smithy should be +2 322
Test Passed
Test: 361 
current size of hand 4
current size of hand after smithy should be +2 6
Test Passed
Test: 362 
current size of hand 394
current size of hand after smithy should be +2 396
Test Passed
Test: 363 
current size of hand 60
current size of hand after smithy should be +2 62
Test Passed
Test: 364 
current size of hand 365
current size of hand after smithy should be +2 367
Test Passed
Test: 365 
current size of hand 363
current size of hand after smithy should be +2 363
Hand Size is 363, should be 365
Bug in Smithy
Test: 366 
current size of hand 333
current size of hand after smithy should be +2 333
Hand Size is 333, should be 335
Bug in Smithy
Test: 367 
current size of hand 368
current size of hand after smithy should be +2 370
Test Passed
Test: 368 
current size of hand 446
current size of hand after smithy should be +2 448
Test Passed
Test: 369 
current size of hand 401
current size of hand after smithy should be +2 403
Test Passed
Test: 370 
current size of hand 426
current size of hand after smithy should be +2 428
Test Passed
Test: 371 
current size of hand 0
current size of hand after smithy should be +2 2
Test Passed
Test: 372 
current size of hand 461
current size of hand after smithy should be +2 463
Test Passed
Test: 373 
current size of hand 69
current size of hand after smithy should be +2 71
Test Passed
Test: 374 
current size of hand 470
current size of hand after smithy should be +2 472
Test Passed
Test: 375 
current size of hand 254
current size of hand after smithy should be +2 256
Test Passed
Test: 376 
current size of hand 50
current size of hand after smithy should be +2 52
Test Passed
Test: 377 
current size of hand 190
current size of hand after smithy should be +2 192
Test Passed
Test: 378 
current size of hand 483
current size of hand after smithy should be +2 485
Test Passed
Test: 379 
current size of hand 191
current size of hand after smithy should be +2 193
Test Passed
Test: 380 
current size of hand 38
current size of hand after smithy should be +2 38
Hand Size is 38, should be 40
Bug in Smithy
Test: 381 
current size of hand 34
current size of hand after smithy should be +2 36
Test Passed
Test: 382 
current size of hand 208
current size of hand after smithy should be +2 210
Test Passed
Test: 383 
current size of hand 22
current size of hand after smithy should be +2 22
Hand Size is 22, should be 24
Bug in Smithy
Test: 384 
current size of hand 102
current size of hand after smithy should be +2 104
Test Passed
Test: 385 
current size of hand 30
current size of hand after smithy should be +2 32
Test Passed
Test: 386 
current size of hand 456
current size of hand after smithy should be +2 458
Test Passed
Test: 387 
current size of hand 428
current size of hand after smithy should be +2 430
Test Passed
Test: 388 
current size of hand 337
current size of hand after smithy should be +2 339
Test Passed
Test: 389 
current size of hand 5
current size of hand after smithy should be +2 5
Hand Size is 5, should be 7
Bug in Smithy
Test: 390 
current size of hand 369
current size of hand after smithy should be +2 369
Hand Size is 369, should be 371
Bug in Smithy
Test: 391 
current size of hand 353
current size of hand after smithy should be +2 353
Hand Size is 353, should be 355
Bug in Smithy
Test: 392 
current size of hand 236
current size of hand after smithy should be +2 238
Test Passed
Test: 393 
current size of hand 164
current size of hand after smithy should be +2 164
Hand Size is 164, should be 166
Bug in Smithy
Test: 394 
current size of hand 69
current size of hand after smithy should be +2 71
Test Passed
Test: 395 
current size of hand 455
current size of hand after smithy should be +2 457
Test Passed
Test: 396 
current size of hand 439
current size of hand after smithy should be +2 441
Test Passed
Test: 397 
current size of hand 401
current size of hand after smithy should be +2 403
Test Passed
Test: 398 
current size of hand 377
current size of hand after smithy should be +2 379
Test Passed
Test: 399 
current size of hand 134
current size of hand after smithy should be +2 136
Test Passed
Test: 400 
current size of hand 499
current size of hand after smithy should be +2 501
Test Passed
Test: 401 
current size of hand 70
current size of hand after smithy should be +2 70
Hand Size is 70, should be 72
Bug in Smithy
Test: 402 
current size of hand 267
current size of hand after smithy should be +2 269
Test Passed
Test: 403 
current size of hand 193
current size of hand after smithy should be +2 195
Test Passed
Test: 404 
current size of hand 212
current size of hand after smithy should be +2 214
Test Passed
Test: 405 
current size of hand 95
current size of hand after smithy should be +2 97
Test Passed
Test: 406 
current size of hand 208
current size of hand after smithy should be +2 210
Test Passed
Test: 407 
current size of hand 190
current size of hand after smithy should be +2 192
Test Passed
Test: 408 
current size of hand 169
current size of hand after smithy should be +2 169
Hand Size is 169, should be 171
Bug in Smithy
Test: 409 
current size of hand 351
current size of hand after smithy should be +2 353
Test Passed
Test: 410 
current size of hand 188
current size of hand after smithy should be +2 190
Test Passed
Test: 411 
current size of hand 114
current size of hand after smithy should be +2 116
Test Passed
Test: 412 
current size of hand 82
current size of hand after smithy should be +2 84
Test Passed
Test: 413 
current size of hand 277
current size of hand after smithy should be +2 279
Test Passed
Test: 414 
current size of hand 235
current size of hand after smithy should be +2 237
Test Passed
Test: 415 
current size of hand 229
current size of hand after smithy should be +2 231
Test Passed
Test: 416 
current size of hand 28
current size of hand after smithy should be +2 28
Hand Size is 28, should be 30
Bug in Smithy
Test: 417 
current size of hand 266
current size of hand after smithy should be +2 266
Hand Size is 266, should be 268
Bug in Smithy
Test: 418 
current size of hand 36
current size of hand after smithy should be +2 36
Hand Size is 36, should be 38
Bug in Smithy
Test: 419 
current size of hand 238
current size of hand after smithy should be +2 238
Hand Size is 238, should be 240
Bug in Smithy
Test: 420 
current size of hand 335
current size of hand after smithy should be +2 337
Test Passed
Test: 421 
current size of hand 250
current size of hand after smithy should be +2 252
Test Passed
Test: 422 
current size of hand 79
current size of hand after smithy should be +2 79
Hand Size is 79, should be 81
Bug in Smithy
Test: 423 
current size of hand 269
current size of hand after smithy should be +2 269
Hand Size is 269, should be 271
Bug in Smithy
Test: 424 
current size of hand 236
current size of hand after smithy should be +2 238
Test Passed
Test: 425 
current size of hand 95
current size of hand after smithy should be +2 97
Test Passed
Test: 426 
current size of hand 107
current size of hand after smithy should be +2 107
Hand Size is 107, should be 109
Bug in Smithy
Test: 427 
current size of hand 302
current size of hand after smithy should be +2 304
Test Passed
Test: 428 
current size of hand 227
current size of hand after smithy should be +2 229
Test Passed
Test: 429 
current size of hand 430
current size of hand after smithy should be +2 432
Test Passed
Test: 430 
current size of hand 427
current size of hand after smithy should be +2 427
Hand Size is 427, should be 429
Bug in Smithy
Test: 431 
current size of hand 218
current size of hand after smithy should be +2 220
Test Passed
Test: 432 
current size of hand 131
current size of hand after smithy should be +2 133
Test Passed
Test: 433 
current size of hand 313
current size of hand after smithy should be +2 315
Test Passed
Test: 434 
current size of hand 51
current size of hand after smithy should be +2 53
Test Passed
Test: 435 
current size of hand 69
current size of hand after smithy should be +2 71
Test Passed
Test: 436 
current size of hand 354
current size of hand after smithy should be +2 354
Hand Size is 354, should be 356
Bug in Smithy
Test: 437 
current size of hand 204
current size of hand after smithy should be +2 206
Test Passed
Test: 438 
current size of hand 187
current size of hand after smithy should be +2 187
Hand Size is 187, should be 189
Bug in Smithy
Test: 439 
current size of hand 210
current size of hand after smithy should be +2 210
Hand Size is 210, should be 212
Bug in Smithy
Test: 440 
current size of hand 334
current size of hand after smithy should be +2 336
Test Passed
Test: 441 
current size of hand 394
current size of hand after smithy should be +2 396
Test Passed
Test: 442 
current size of hand 47
current size of hand after smithy should be +2 49
Test Passed
Test: 443 
current size of hand 360
current size of hand after smithy should be +2 362
Test Passed
Test: 444 
current size of hand 148
current size of hand after smithy should be +2 150
Test Passed
Test: 445 
current size of hand 366
current size of hand after smithy should be +2 368
Test Passed
Test: 446 
current size of hand 408
current size of hand after smithy should be +2 410
Test Passed
Test: 447 
current size of hand 93
current size of hand after smithy should be +2 95
Test Passed
Test: 448 
current size of hand 410
current size of hand after smithy should be +2 410
Hand Size is 410, should be 412
Bug in Smithy
Test: 449 
current size of hand 447
current size of hand after smithy should be +2 449
Test Passed
Test: 450 
current size of hand 200
current size of hand after smithy should be +2 202
Test Passed
Test: 451 
current size of hand 449
current size of hand after smithy should be +2 449
Hand Size is 449, should be 451
Bug in Smithy
Test: 452 
current size of hand 43
current size of hand after smithy should be +2 43
Hand Size is 43, should be 45
Bug in Smithy
Test: 453 
current size of hand 42
current size of hand after smithy should be +2 42
Hand Size is 42, should be 44
Bug in Smithy
Test: 454 
current size of hand 136
current size of hand after smithy should be +2 136
Hand Size is 136, should be 138
Bug in Smithy
Test: 455 
current size of hand 297
current size of hand after smithy should be +2 299
Test Passed
Test: 456 
current size of hand 250
current size of hand after smithy should be +2 252
Test Passed
Test: 457 
current size of hand 71
current size of hand after smithy should be +2 71
Hand Size is 71, should be 73
Bug in Smithy
Test: 458 
current size of hand 396
current size of hand after smithy should be +2 396
Hand Size is 396, should be 398
Bug in Smithy
Test: 459 
current size of hand 229
current size of hand after smithy should be +2 231
Test Passed
Test: 460 
current size of hand 145
current size of hand after smithy should be +2 145
Hand Size is 145, should be 147
Bug in Smithy
Test: 461 
current size of hand 198
current size of hand after smithy should be +2 200
Test Passed
Test: 462 
current size of hand 421
current size of hand after smithy should be +2 423
Test Passed
Test: 463 
current size of hand 378
current size of hand after smithy should be +2 380
Test Passed
Test: 464 
current size of hand 179
current size of hand after smithy should be +2 181
Test Passed
Test: 465 
current size of hand 302
current size of hand after smithy should be +2 304
Test Passed
Test: 466 
current size of hand 402
current size of hand after smithy should be +2 404
Test Passed
Test: 467 
current size of hand 123
current size of hand after smithy should be +2 125
Test Passed
Test: 468 
current size of hand 333
current size of hand after smithy should be +2 335
Test Passed
Test: 469 
current size of hand 0
current size of hand after smithy should be +2 0
Hand Size is 0, should be 2
Bug in Smithy
Test: 470 
current size of hand 56
current size of hand after smithy should be +2 58
Test Passed
Test: 471 
current size of hand 451
current size of hand after smithy should be +2 451
Hand Size is 451, should be 453
Bug in Smithy
Test: 472 
current size of hand 345
current size of hand after smithy should be +2 347
Test Passed
Test: 473 
current size of hand 307
current size of hand after smithy should be +2 309
Test Passed
Test: 474 
current size of hand 130
current size of hand after smithy should be +2 130
Hand Size is 130, should be 132
Bug in Smithy
Test: 475 
current size of hand 126
current size of hand after smithy should be +2 126
Hand Size is 126, should be 128
Bug in Smithy
Test: 476 
current size of hand 141
current size of hand after smithy should be +2 143
Test Passed
Test: 477 
current size of hand 139
current size of hand after smithy should be +2 141
Test Passed
Test: 478 
current size of hand 123
current size of hand after smithy should be +2 123
Hand Size is 123, should be 125
Bug in Smithy
Test: 479 
current size of hand 283
current size of hand after smithy should be +2 283
Hand Size is 283, should be 285
Bug in Smithy
Test: 480 
current size of hand 393
current size of hand after smithy should be +2 395
Test Passed
Test: 481 
current size of hand 289
current size of hand after smithy should be +2 291
Test Passed
Test: 482 
current size of hand 237
current size of hand after smithy should be +2 239
Test Passed
Test: 483 
current size of hand 458
current size of hand after smithy should be +2 458
Hand Size is 458, should be 460
Bug in Smithy
Test: 484 
current size of hand 54
current size of hand after smithy should be +2 54
Hand Size is 54, should be 56
Bug in Smithy
Test: 485 
current size of hand 260
current size of hand after smithy should be +2 260
Hand Size is 260, should be 262
Bug in Smithy
Test: 486 
current size of hand 318
current size of hand after smithy should be +2 317
Hand Size is 317, should be 320
Bug in Smithy
Test: 487 
current size of hand 277
current size of hand after smithy should be +2 279
Test Passed
Test: 488 
current size of hand 186
current size of hand after smithy should be +2 188
Test Passed
Test: 489 
current size of hand 479
current size of hand after smithy should be +2 481
Test Passed
Test: 490 
current size of hand 353
current size of hand after smithy should be +2 355
Test Passed
Test: 491 
current size of hand 499
current size of hand after smithy should be +2 501
Test Passed
Test: 492 
current size of hand 326
current size of hand after smithy should be +2 328
Test Passed
Test: 493 
current size of hand 96
current size of hand after smithy should be +2 98
Test Passed
Test: 494 
current size of hand 231
current size of hand after smithy should be +2 233
Test Passed
Test: 495 
current size of hand 394
current size of hand after smithy should be +2 394
Hand Size is 394, should be 396
Bug in Smithy
Test: 496 
current size of hand 82
current size of hand after smithy should be +2 82
Hand Size is 82, should be 84
Bug in Smithy
Test: 497 
current size of hand 117
current size of hand after smithy should be +2 116
Hand Size is 116, should be 119
Bug in Smithy
Test: 498 
current size of hand 141
current size of hand after smithy should be +2 143
Test Passed
Test: 499 
current size of hand 23
current size of hand after smithy should be +2 25
Test Passed
File 'dominion.c'
Lines executed:27.68% of 560
Creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
    22864:    8:int compare(const void* a, const void* b) {
    22864:    9:  if (*(int*)a > *(int*)b)
    #####:   10:    return 1;
    22864:   11:  if (*(int*)a < *(int*)b)
     6096:   12:    return -1;
    16768:   13:  return 0;
        -:   14:}
        -:   15:
    #####:   16:struct gameState* newGame() {
    #####:   17:  struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:  return g;
        -:   19:}
        -:   20:
    #####:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:		  int k8, int k9, int k10) {
    #####:   23:  int* k = malloc(10 * sizeof(int));
    #####:   24:  k[0] = k1;
    #####:   25:  k[1] = k2;
    #####:   26:  k[2] = k3;
    #####:   27:  k[3] = k4;
    #####:   28:  k[4] = k5;
    #####:   29:  k[5] = k6;
    #####:   30:  k[6] = k7;
    #####:   31:  k[7] = k8;
    #####:   32:  k[8] = k9;
    #####:   33:  k[9] = k10;
    #####:   34:  return k;
        -:   35:}
        -:   36:
      500:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:		   struct gameState *state) {
        -:   39:
        -:   40:  int i;
        -:   41:  int j;
        -:   42:  int it;			
        -:   43:  //set up random number generator
      500:   44:  SelectStream(1);
      500:   45:  PutSeed((long)randomSeed);
        -:   46:  
        -:   47:  //check number of players
      500:   48:  if (numPlayers > MAX_PLAYERS || numPlayers < 2)
        -:   49:    {
    #####:   50:      return -1;
        -:   51:    }
        -:   52:
        -:   53:  //set number of players
      500:   54:  state->numPlayers = numPlayers;
        -:   55:
        -:   56:  //check selected kingdom cards are different
     5500:   57:  for (i = 0; i < 10; i++)
        -:   58:    {
    55000:   59:      for (j = 0; j < 10; j++)
        -:   60:        {
    50000:   61:	  if (j != i && kingdomCards[j] == kingdomCards[i])
        -:   62:	    {
    #####:   63:	      return -1;
        -:   64:	    }
        -:   65:        }
        -:   66:    }
        -:   67:
        -:   68:
        -:   69:  //initialize supply
        -:   70:  ///////////////////////////////
        -:   71:
        -:   72:  //set number of Curse cards
      500:   73:  if (numPlayers == 2)
        -:   74:    {
      160:   75:      state->supplyCount[curse] = 10;
        -:   76:    }
      340:   77:  else if (numPlayers == 3)
        -:   78:    {
      156:   79:      state->supplyCount[curse] = 20;
        -:   80:    }
        -:   81:  else
        -:   82:    {
      184:   83:      state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:  //set number of Victory cards
      500:   87:  if (numPlayers == 2)
        -:   88:    {
      160:   89:      state->supplyCount[estate] = 8;
      160:   90:      state->supplyCount[duchy] = 8;
      160:   91:      state->supplyCount[province] = 8;
        -:   92:    }
        -:   93:  else
        -:   94:    {
      340:   95:      state->supplyCount[estate] = 12;
      340:   96:      state->supplyCount[duchy] = 12;
      340:   97:      state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:  //set number of Treasure cards
      500:  101:  state->supplyCount[copper] = 60 - (7 * numPlayers);
      500:  102:  state->supplyCount[silver] = 40;
      500:  103:  state->supplyCount[gold] = 30;
        -:  104:
        -:  105:  //set number of Kingdom cards
    10500:  106:  for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
        -:  107:    {
    82500:  108:      for (j = 0; j < 10; j++)           		//loop chosen cards
        -:  109:	{
    77500:  110:	  if (kingdomCards[j] == i)
        -:  111:	    {
        -:  112:	      //check if card is a 'Victory' Kingdom card
     5000:  113:	      if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
        -:  114:		{
     1000:  115:		  if (numPlayers == 2){ 
      160:  116:		    state->supplyCount[i] = 8; 
        -:  117:		  }
      340:  118:		  else{ state->supplyCount[i] = 12; }
        -:  119:		}
        -:  120:	      else
        -:  121:		{
     4500:  122:		  state->supplyCount[i] = 10;
        -:  123:		}
     5000:  124:	      break;
        -:  125:	    }
        -:  126:	  else    //card is not in the set choosen for the game
        -:  127:	    {
    72500:  128:	      state->supplyCount[i] = -1;
        -:  129:	    }
        -:  130:	}
        -:  131:
        -:  132:    }
        -:  133:
        -:  134:  ////////////////////////
        -:  135:  //supply intilization complete
        -:  136:
        -:  137:  //set player decks
     2024:  138:  for (i = 0; i < numPlayers; i++)
        -:  139:    {
     1524:  140:      state->deckCount[i] = 0;
     6096:  141:      for (j = 0; j < 3; j++)
        -:  142:	{
     4572:  143:	  state->deck[i][j] = estate;
     4572:  144:	  state->deckCount[i]++;
        -:  145:	}
    12192:  146:      for (j = 3; j < 10; j++)
        -:  147:	{
    10668:  148:	  state->deck[i][j] = copper;
    10668:  149:	  state->deckCount[i]++;		
        -:  150:	}
        -:  151:    }
        -:  152:
        -:  153:  //shuffle player decks
     2024:  154:  for (i = 0; i < numPlayers; i++)
        -:  155:    {
     1524:  156:      if ( shuffle(i, state) < 0 )
        -:  157:	{
    #####:  158:	  return -1;
        -:  159:	}
        -:  160:    }
        -:  161:
        -:  162:  //draw player hands
     2024:  163:  for (i = 0; i < numPlayers; i++)
        -:  164:    {  
        -:  165:      //initialize hand size to zero
     1524:  166:      state->handCount[i] = 0;
     1524:  167:      state->discardCount[i] = 0;
        -:  168:      //draw 5 cards
        -:  169:      // for (j = 0; j < 5; j++)
        -:  170:      //	{
        -:  171:      //	  drawCard(i, state);
        -:  172:      //	}
        -:  173:    }
        -:  174:  
        -:  175:  //set embargo tokens to 0 for all supply piles
    14000:  176:  for (i = 0; i <= treasure_map; i++)
        -:  177:    {
    13500:  178:      state->embargoTokens[i] = 0;
        -:  179:    }
        -:  180:
        -:  181:  //initialize first player's turn
      500:  182:  state->outpostPlayed = 0;
      500:  183:  state->phase = 0;
      500:  184:  state->numActions = 1;
      500:  185:  state->numBuys = 1;
      500:  186:  state->playedCardCount = 0;
      500:  187:  state->whoseTurn = 0;
      500:  188:  state->handCount[state->whoseTurn] = 0;
        -:  189:  //int it; move to top
        -:  190:
        -:  191:  //Moved draw cards to here, only drawing at the start of a turn
     3000:  192:  for (it = 0; it < 5; it++){
     2500:  193:    drawCard(state->whoseTurn, state);
        -:  194:  }
        -:  195:
      500:  196:  updateCoins(state->whoseTurn, state, 0);
        -:  197:
      500:  198:  return 0;
        -:  199:}
        -:  200:
     1968:  201:int shuffle(int player, struct gameState *state) {
        -:  202: 
        -:  203:
        -:  204:  int newDeck[MAX_DECK];
     1968:  205:  int newDeckPos = 0;
        -:  206:  int card;
        -:  207:  int i;
        -:  208:
     1968:  209:  if (state->deckCount[player] < 1)
      443:  210:    return -1;
     1525:  211:  qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare); 
        -:  212:  /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  213:
    18294:  214:  while (state->deckCount[player] > 0) {
    15244:  215:    card = floor(Random() * state->deckCount[player]);
    15244:  216:    newDeck[newDeckPos] = state->deck[player][card];
    15244:  217:    newDeckPos++;
    49683:  218:    for (i = card; i < state->deckCount[player]-1; i++) {
    34439:  219:      state->deck[player][i] = state->deck[player][i+1];
        -:  220:    }
    15244:  221:    state->deckCount[player]--;
        -:  222:  }
    16769:  223:  for (i = 0; i < newDeckPos; i++) {
    15244:  224:    state->deck[player][i] = newDeck[i];
    15244:  225:    state->deckCount[player]++;
        -:  226:  }
        -:  227:
     1525:  228:  return 0;
        -:  229:}
        -:  230:
      500:  231:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state) 
        -:  232:{	
        -:  233:  int card;
      500:  234:  int coin_bonus = 0; 		//tracks coins gain from actions
        -:  235:
        -:  236:  //check if it is the right phase
      500:  237:  if (state->phase != 0)
        -:  238:    {
    #####:  239:      return -1;
        -:  240:    }
        -:  241:	
        -:  242:  //check if player has enough actions
      500:  243:  if ( state->numActions < 1 )
        -:  244:    {
    #####:  245:      return -1;
        -:  246:    }
        -:  247:	
        -:  248:  //get card played
      500:  249:  card = handCard(handPos, state);
        -:  250:	
        -:  251:  //check if selected card is an action
      500:  252:  if ( card < adventurer || card > treasure_map )
        -:  253:    {
    #####:  254:      return -1;
        -:  255:    }
        -:  256:	
        -:  257:  //play card
      500:  258:  if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
        -:  259:    {
    #####:  260:      return -1;
        -:  261:    }
        -:  262:	
        -:  263:  //reduce number of actions
      500:  264:  state->numActions--;
        -:  265:
        -:  266:  //update coins (Treasure cards may be added with card draws)
      500:  267:  updateCoins(state->whoseTurn, state, coin_bonus);
        -:  268:	
      500:  269:  return 0;
        -:  270:}
        -:  271:
    #####:  272:int buyCard(int supplyPos, struct gameState *state) {
        -:  273:  int who;
        -:  274:  if (DEBUG){
        -:  275:    printf("Entering buyCard...\n");
        -:  276:  }
        -:  277:
        -:  278:  // I don't know what to do about the phase thing.
        -:  279:
    #####:  280:  who = state->whoseTurn;
        -:  281:
    #####:  282:  if (state->numBuys < 1){
        -:  283:    if (DEBUG)
        -:  284:      printf("You do not have any buys left\n");
    #####:  285:    return -1;
    #####:  286:  } else if (supplyCount(supplyPos, state) <1){
        -:  287:    if (DEBUG)
        -:  288:      printf("There are not any of that type of card left\n");
    #####:  289:    return -1;
    #####:  290:  } else if (state->coins < getCost(supplyPos)){
        -:  291:    if (DEBUG) 
        -:  292:      printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  293:    return -1;
        -:  294:  } else {
    #####:  295:    state->phase=1;
        -:  296:    //state->supplyCount[supplyPos]--;
    #####:  297:    gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  298:  
    #####:  299:    state->coins = (state->coins) - (getCost(supplyPos));
    #####:  300:    state->numBuys--;
        -:  301:    if (DEBUG)
        -:  302:      printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  303:  }
        -:  304:
        -:  305:  //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  306:  //state->discardCount[who]++;
        -:  307:    
    #####:  308:  return 0;
        -:  309:}
        -:  310:
    #####:  311:int numHandCards(struct gameState *state) {
    #####:  312:  return state->handCount[ whoseTurn(state) ];
        -:  313:}
        -:  314:
      500:  315:int handCard(int handPos, struct gameState *state) {
      500:  316:  int currentPlayer = whoseTurn(state);
      500:  317:  return state->hand[currentPlayer][handPos];
        -:  318:}
        -:  319:
    #####:  320:int supplyCount(int card, struct gameState *state) {
    #####:  321:  return state->supplyCount[card];
        -:  322:}
        -:  323:
    #####:  324:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  325:  int i;
    #####:  326:  int count = 0;
        -:  327:
    #####:  328:  for (i = 0; i < state->deckCount[player]; i++)
        -:  329:    {
    #####:  330:      if (state->deck[player][i] == card) count++;
        -:  331:    }
        -:  332:
    #####:  333:  for (i = 0; i < state->handCount[player]; i++)
        -:  334:    {
    #####:  335:      if (state->hand[player][i] == card) count++;
        -:  336:    }
        -:  337:
    #####:  338:  for (i = 0; i < state->discardCount[player]; i++)
        -:  339:    {
    #####:  340:      if (state->discard[player][i] == card) count++;
        -:  341:    }
        -:  342:
    #####:  343:  return count;
        -:  344:}
        -:  345:
     1000:  346:int whoseTurn(struct gameState *state) {
     1000:  347:  return state->whoseTurn;
        -:  348:}
        -:  349:
    #####:  350:int endTurn(struct gameState *state) {
        -:  351:  int k;
        -:  352:  int i;
    #####:  353:  int currentPlayer = whoseTurn(state);
        -:  354:  
        -:  355:  //Discard hand
    #####:  356:  for (i = 0; i < state->handCount[currentPlayer]; i++){
    #####:  357:    state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  358:    state->hand[currentPlayer][i] = -1;//Set card to -1
        -:  359:  }
    #####:  360:  state->handCount[currentPlayer] = 0;//Reset hand count
        -:  361:    
        -:  362:  //Code for determining the player
    #####:  363:  if (currentPlayer < (state->numPlayers - 1)){ 
    #####:  364:    state->whoseTurn = currentPlayer + 1;//Still safe to increment
        -:  365:  }
        -:  366:  else{
    #####:  367:    state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  368:  }
        -:  369:
    #####:  370:  state->outpostPlayed = 0;
    #####:  371:  state->phase = 0;
    #####:  372:  state->numActions = 1;
    #####:  373:  state->coins = 0;
    #####:  374:  state->numBuys = 1;
    #####:  375:  state->playedCardCount = 0;
    #####:  376:  state->handCount[state->whoseTurn] = 0;
        -:  377:
        -:  378:  //int k; move to top
        -:  379:  //Next player draws hand
    #####:  380:  for (k = 0; k < 5; k++){
    #####:  381:    drawCard(state->whoseTurn, state);//Draw a card
        -:  382:  }
        -:  383:
        -:  384:  //Update money
    #####:  385:  updateCoins(state->whoseTurn, state , 0);
        -:  386:
    #####:  387:  return 0;
        -:  388:}
        -:  389:
    #####:  390:int isGameOver(struct gameState *state) {
        -:  391:  int i;
        -:  392:  int j;
        -:  393:	
        -:  394:  //if stack of Province cards is empty, the game ends
    #####:  395:  if (state->supplyCount[province] == 0)
        -:  396:    {
    #####:  397:      return 1;
        -:  398:    }
        -:  399:
        -:  400:  //if three supply pile are at 0, the game ends
    #####:  401:  j = 0;
    #####:  402:  for (i = 0; i < 25; i++)
        -:  403:    {
    #####:  404:      if (state->supplyCount[i] == 0)
        -:  405:	{
    #####:  406:	  j++;
        -:  407:	}
        -:  408:    }
    #####:  409:  if ( j >= 3)
        -:  410:    {
    #####:  411:      return 1;
        -:  412:    }
        -:  413:
    #####:  414:  return 0;
        -:  415:}
        -:  416:
    #####:  417:int scoreFor (int player, struct gameState *state) {
        -:  418:
        -:  419:  int i;
    #####:  420:  int score = 0;
        -:  421:  //score from hand
    #####:  422:  for (i = 0; i < state->handCount[player]; i++)
        -:  423:    {
    #####:  424:      if (state->hand[player][i] == curse) { score = score - 1; };
    #####:  425:      if (state->hand[player][i] == estate) { score = score + 1; };
    #####:  426:      if (state->hand[player][i] == duchy) { score = score + 3; };
    #####:  427:      if (state->hand[player][i] == province) { score = score + 6; };
    #####:  428:      if (state->hand[player][i] == great_hall) { score = score + 1; };
    #####:  429:      if (state->hand[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  430:    }
        -:  431:
        -:  432:  //score from discard
    #####:  433:  for (i = 0; i < state->discardCount[player]; i++)
        -:  434:    {
    #####:  435:      if (state->discard[player][i] == curse) { score = score - 1; };
    #####:  436:      if (state->discard[player][i] == estate) { score = score + 1; };
    #####:  437:      if (state->discard[player][i] == duchy) { score = score + 3; };
    #####:  438:      if (state->discard[player][i] == province) { score = score + 6; };
    #####:  439:      if (state->discard[player][i] == great_hall) { score = score + 1; };
    #####:  440:      if (state->discard[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  441:    }
        -:  442:
        -:  443:  //score from deck
    #####:  444:  for (i = 0; i < state->discardCount[player]; i++)
        -:  445:    {
    #####:  446:      if (state->deck[player][i] == curse) { score = score - 1; };
    #####:  447:      if (state->deck[player][i] == estate) { score = score + 1; };
    #####:  448:      if (state->deck[player][i] == duchy) { score = score + 3; };
    #####:  449:      if (state->deck[player][i] == province) { score = score + 6; };
    #####:  450:      if (state->deck[player][i] == great_hall) { score = score + 1; };
    #####:  451:      if (state->deck[player][i] == gardens) { score = score + ( fullDeckCount(player, 0, state) / 10 ); };
        -:  452:    }
        -:  453:
    #####:  454:  return score;
        -:  455:}
        -:  456:
    #####:  457:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  458:  int i;	
        -:  459:  int j;
        -:  460:  int highScore;
        -:  461:  int currentPlayer;
        -:  462:
        -:  463:  //get score for each player
    #####:  464:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  465:    {
        -:  466:      //set unused player scores to -9999
    #####:  467:      if (i >= state->numPlayers)
        -:  468:	{
    #####:  469:	  players[i] = -9999;
        -:  470:	}
        -:  471:      else
        -:  472:	{
    #####:  473:	  players[i] = scoreFor (i, state);
        -:  474:	}
        -:  475:    }
        -:  476:
        -:  477:  //find highest score
    #####:  478:  j = 0;
    #####:  479:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  480:    {
    #####:  481:      if (players[i] > players[j])
        -:  482:	{
    #####:  483:	  j = i;
        -:  484:	}
        -:  485:    }
    #####:  486:  highScore = players[j];
        -:  487:
        -:  488:  //add 1 to players who had less turns
    #####:  489:  currentPlayer = whoseTurn(state);
    #####:  490:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  491:    {
    #####:  492:      if ( players[i] == highScore && i > currentPlayer )
        -:  493:	{
    #####:  494:	  players[i]++;
        -:  495:	}
        -:  496:    }
        -:  497:
        -:  498:  //find new highest score
    #####:  499:  j = 0;
    #####:  500:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  501:    {
    #####:  502:      if ( players[i] > players[j] )
        -:  503:	{
    #####:  504:	  j = i;
        -:  505:	}
        -:  506:    }
    #####:  507:  highScore = players[j];
        -:  508:
        -:  509:  //set winners in array to 1 and rest to 0
    #####:  510:  for (i = 0; i < MAX_PLAYERS; i++)
        -:  511:    {
    #####:  512:      if ( players[i] == highScore )
        -:  513:	{
    #####:  514:	  players[i] = 1;
        -:  515:	}
        -:  516:      else
        -:  517:	{
    #####:  518:	  players[i] = 0;
        -:  519:	}
        -:  520:    }
        -:  521:
    #####:  522:  return 0;
        -:  523:}
        -:  524:
     4000:  525:int drawCard(int player, struct gameState *state)
        -:  526:{	int count;
        -:  527:  int deckCounter;
     4000:  528:  if (state->deckCount[player] <= 0){//Deck is empty
        -:  529:    
        -:  530:    //Step 1 Shuffle the discard pile back into a deck
        -:  531:    int i;
        -:  532:    //Move discard to deck
     1018:  533:    for (i = 0; i < state->discardCount[player];i++){
      574:  534:      state->deck[player][i] = state->discard[player][i];
      574:  535:      state->discard[player][i] = -1;
        -:  536:    }
        -:  537:
      444:  538:    state->deckCount[player] = state->discardCount[player];
      444:  539:    state->discardCount[player] = 0;//Reset discard
        -:  540:
        -:  541:    //Shufffle the deck
      444:  542:    shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  543:   
        -:  544:    if (DEBUG){//Debug statements
        -:  545:      printf("Deck count now: %d\n", state->deckCount[player]);
        -:  546:    }
        -:  547:    
      444:  548:    state->discardCount[player] = 0;
        -:  549:
        -:  550:    //Step 2 Draw Card
      444:  551:    count = state->handCount[player];//Get current player's hand count
        -:  552:    
        -:  553:    if (DEBUG){//Debug statements
        -:  554:      printf("Current hand count: %d\n", count);
        -:  555:    }
        -:  556:    
      444:  557:    deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  558:
      444:  559:    if (deckCounter == 0)
      300:  560:      return -1;
        -:  561:
      144:  562:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
      144:  563:    state->deckCount[player]--;
      144:  564:    state->handCount[player]++;//Increment hand count
        -:  565:  }
        -:  566:
        -:  567:  else{
     3556:  568:    int count = state->handCount[player];//Get current hand count for player
        -:  569:    int deckCounter;
        -:  570:    if (DEBUG){//Debug statements
        -:  571:      printf("Current hand count: %d\n", count);
        -:  572:    }
        -:  573:
     3556:  574:    deckCounter = state->deckCount[player];//Create holder for the deck count
     3556:  575:    state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
     3556:  576:    state->deckCount[player]--;
     3556:  577:    state->handCount[player]++;//Increment hand count
        -:  578:  }
        -:  579:
     3700:  580:  return 0;
        -:  581:}
        -:  582:
    #####:  583:int getCost(int cardNumber)
        -:  584:{
    #####:  585:  switch( cardNumber ) 
        -:  586:    {
        -:  587:    case curse:
    #####:  588:      return 0;
        -:  589:    case estate:
    #####:  590:      return 2;
        -:  591:    case duchy:
    #####:  592:      return 5;
        -:  593:    case province:
    #####:  594:      return 8;
        -:  595:    case copper:
    #####:  596:      return 0;
        -:  597:    case silver:
    #####:  598:      return 3;
        -:  599:    case gold:
    #####:  600:      return 6;
        -:  601:    case adventurer:
    #####:  602:      return 6;
        -:  603:    case council_room:
    #####:  604:      return 5;
        -:  605:    case feast:
    #####:  606:      return 4;
        -:  607:    case gardens:
    #####:  608:      return 4;
        -:  609:    case mine:
    #####:  610:      return 5;
        -:  611:    case remodel:
    #####:  612:      return 4;
        -:  613:    case smithy:
    #####:  614:      return 4;
        -:  615:    case village:
    #####:  616:      return 3;
        -:  617:    case baron:
    #####:  618:      return 4;
        -:  619:    case great_hall:
    #####:  620:      return 3;
        -:  621:    case minion:
    #####:  622:      return 5;
        -:  623:    case steward:
    #####:  624:      return 3;
        -:  625:    case tribute:
    #####:  626:      return 5;
        -:  627:    case ambassador:
    #####:  628:      return 3;
        -:  629:    case cutpurse:
    #####:  630:      return 4;
        -:  631:    case embargo: 
    #####:  632:      return 2;
        -:  633:    case outpost:
    #####:  634:      return 5;
        -:  635:    case salvager:
    #####:  636:      return 4;
        -:  637:    case sea_hag:
    #####:  638:      return 4;
        -:  639:    case treasure_map:
    #####:  640:      return 4;
        -:  641:    }
        -:  642:	
    #####:  643:  return -1;
        -:  644:}
        -:  645:
      500:  646:int smithyfunc(int currentPlayer, struct gameState *state, int handPos)
        -:  647:{
        -:  648:	 int i;
        -:  649:	 //+3 Cards
     2000:  650:      for (i = 0; i < 3; i++)
        -:  651:	{
     1500:  652:	  drawCard(currentPlayer, state);
        -:  653:	}
        -:  654:			
        -:  655:      //discard card from hand
      500:  656:      discardCard(handPos, currentPlayer, state, 0);
      500:  657:      return 0;
        -:  658:}
        -:  659:
    #####:  660:int adventurerfunc(int currentPlayer, struct gameState *state, int drawntreasure, int cardDrawn)
        -:  661:{
    #####:  662:	int z=0;
        -:  663:	int temphand[MAX_HAND];
    #####:  664:	while(drawntreasure<2){
    #####:  665:	if (state->deckCount[currentPlayer] <1){//if the deck is empty we need to shuffle discard and add to deck
    #####:  666:	  shuffle(currentPlayer, state);
        -:  667:	}
    #####:  668:	drawCard(currentPlayer, state);
    #####:  669:	cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  670:	if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
    #####:  671:	  drawntreasure+=2;
        -:  672:	else{
    #####:  673:	  temphand[z]=cardDrawn;
    #####:  674:	  state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
    #####:  675:	  z++;
        -:  676:	}
        -:  677:      }
    #####:  678:      while(z-1>=0){
    #####:  679:	state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  680:	z=z-1;
        -:  681:      }
    #####:  682:      return 0;
        -:  683:}
        -:  684:
    #####:  685:int gardfunc()
        -:  686:{
    #####:  687:	return 0;
        -:  688:}
        -:  689:
    #####:  690:int greathallfunc(int currentPlayer, struct gameState *state, int handPos)
        -:  691:{
        -:  692:	   //+1 Card
    #####:  693:      drawCard(currentPlayer, state);
        -:  694:			
        -:  695:      //+1 Actions
    #####:  696:      state->numActions++;
        -:  697:			
        -:  698:      //discard card from hand
    #####:  699:	  handPos++;
    #####:  700:      discardCard(handPos, currentPlayer, state, 0);
    #####:  701:      return 0;
        -:  702:}
        -:  703:
        -:  704:
    #####:  705:int villagefunc(int currentPlayer, struct gameState *state, int handPos)
        -:  706:{
        -:  707:	  //+1 Card
    #####:  708:      drawCard(currentPlayer, state);
        -:  709:			
        -:  710:      //+2 Actions
    #####:  711:      state->numActions = state->numActions + 2;
        -:  712:			
        -:  713:      //discard played card from hand
    #####:  714:      discardCard(handPos, currentPlayer, state, 0);
    #####:  715:      return 0;
        -:  716:}
        -:  717:
        -:  718:
      500:  719:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  720:{
        -:  721:  int i;
        -:  722:  int j;
        -:  723:  int k;
        -:  724:  int x;
        -:  725:  int index;
      500:  726:  int currentPlayer = whoseTurn(state);
      500:  727:  int nextPlayer = currentPlayer + 1;
        -:  728:
      500:  729:  int tributeRevealedCards[2] = {-1, -1};
        -:  730:  int temphand[MAX_HAND];// moved above the if statement
      500:  731:  int drawntreasure=0;
        -:  732:  int cardDrawn;
      500:  733:  int z = 0;// this is the counter for the temp hand
      500:  734:  if (nextPlayer > (state->numPlayers - 1)){
      298:  735:    nextPlayer = 0;
        -:  736:  }
        -:  737:  
        -:  738:	
        -:  739:  //uses switch to select card and perform actions
      500:  740:  switch( card ) 
        -:  741:    {
        -:  742:    case adventurer:
    #####:  743:      return adventurerfunc(currentPlayer, state, drawntreasure, cardDrawn);
        -:  744:			
        -:  745:    case council_room:
        -:  746:      //+4 Cards
    #####:  747:      for (i = 0; i < 4; i++)
        -:  748:	{
    #####:  749:	  drawCard(currentPlayer, state);
        -:  750:	}
        -:  751:			
        -:  752:      //+1 Buy
    #####:  753:      state->numBuys++;
        -:  754:			
        -:  755:      //Each other player draws a card
    #####:  756:      for (i = 0; i < state->numPlayers; i++)
        -:  757:	{
    #####:  758:	  if ( i != currentPlayer )
        -:  759:	    {
    #####:  760:	      drawCard(i, state);
        -:  761:	    }
        -:  762:	}
        -:  763:			
        -:  764:      //put played card in played card pile
    #####:  765:      discardCard(handPos, currentPlayer, state, 0);
        -:  766:			
    #####:  767:      return 0;
        -:  768:			
        -:  769:    case feast:
        -:  770:      //gain card with cost up to 5
        -:  771:      //Backup hand
    #####:  772:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  773:	temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  774:	state->hand[currentPlayer][i] = -1;//Set to nothing
        -:  775:      }
        -:  776:      //Backup hand
        -:  777:
        -:  778:      //Update Coins for Buy
    #####:  779:      updateCoins(currentPlayer, state, 5);
    #####:  780:      x = 1;//Condition to loop on
    #####:  781:      while( x == 1) {//Buy one card
    #####:  782:	if (supplyCount(choice1, state) <= 0){
        -:  783:	  if (DEBUG)
        -:  784:	    printf("None of that card left, sorry!\n");
        -:  785:
        -:  786:	  if (DEBUG){
        -:  787:	    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  788:	  }
        -:  789:	}
    #####:  790:	else if (state->coins < getCost(choice1)){
    #####:  791:	  printf("That card is too expensive!\n");
        -:  792:
        -:  793:	  if (DEBUG){
        -:  794:	    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  795:	  }
        -:  796:	}
        -:  797:	else{
        -:  798:
        -:  799:	  if (DEBUG){
        -:  800:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  801:	  }
        -:  802:
    #####:  803:	  gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  804:	  x = 0;//No more buying cards
        -:  805:
        -:  806:	  if (DEBUG){
        -:  807:	    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  808:	  }
        -:  809:
        -:  810:	}
        -:  811:      }     
        -:  812:
        -:  813:      //Reset Hand
    #####:  814:      for (i = 0; i <= state->handCount[currentPlayer]; i++){
    #####:  815:	state->hand[currentPlayer][i] = temphand[i];
    #####:  816:	temphand[i] = -1;
        -:  817:      }
        -:  818:      //Reset Hand
        -:  819:      			
    #####:  820:      return 0;
        -:  821:			
        -:  822:    case gardens:
    #####:  823:      return gardfunc();
        -:  824:			
        -:  825:    case mine:
    #####:  826:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  827:
    #####:  828:      if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold)
        -:  829:	{
    #####:  830:	  return -1;
        -:  831:	}
        -:  832:		
    #####:  833:      if (choice2 > treasure_map || choice2 < curse)
        -:  834:	{
    #####:  835:	  return -1;
        -:  836:	}
        -:  837:
    #####:  838:      if ( (getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2) )
        -:  839:	{
    #####:  840:	  return -1;
        -:  841:	}
        -:  842:
    #####:  843:      gainCard(choice2, state, 2, currentPlayer);
        -:  844:
        -:  845:      //discard card from hand
    #####:  846:      discardCard(handPos, currentPlayer, state, 0);
        -:  847:
        -:  848:      //discard trashed card
    #####:  849:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  850:	{
    #####:  851:	  if (state->hand[currentPlayer][i] == j)
        -:  852:	    {
    #####:  853:	      discardCard(i, currentPlayer, state, 0);			
    #####:  854:	      break;
        -:  855:	    }
        -:  856:	}
        -:  857:			
    #####:  858:      return 0;
        -:  859:			
        -:  860:    case remodel:
    #####:  861:      j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  862:
    #####:  863:      if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
        -:  864:	{
    #####:  865:	  return -1;
        -:  866:	}
        -:  867:
    #####:  868:      gainCard(choice2, state, 0, currentPlayer);
        -:  869:
        -:  870:      //discard card from hand
    #####:  871:      discardCard(handPos, currentPlayer, state, 0);
        -:  872:
        -:  873:      //discard trashed card
    #####:  874:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -:  875:	{
    #####:  876:	  if (state->hand[currentPlayer][i] == j)
        -:  877:	    {
    #####:  878:	      discardCard(i, currentPlayer, state, 0);			
    #####:  879:	      break;
        -:  880:	    }
        -:  881:	}
        -:  882:
        -:  883:
    #####:  884:      return 0;
        -:  885:		
        -:  886:    case smithy:
      500:  887:		return smithyfunc(currentPlayer, state, handPos);
        -:  888:		
        -:  889:    case village:
    #####:  890:      return villagefunc(currentPlayer, state, handPos);
        -:  891:		
        -:  892:    case baron:
    #####:  893:      state->numBuys++;//Increase buys by 1!
    #####:  894:      if (choice1 > 0){//Boolean true or going to discard an estate
    #####:  895:	int p = 0;//Iterator for hand!
    #####:  896:	int card_not_discarded = 1;//Flag for discard set!
    #####:  897:	while(card_not_discarded){
    #####:  898:	  if (state->hand[currentPlayer][p] == estate){//Found an estate card!
    #####:  899:	    state->coins += 4;//Add 4 coins to the amount of coins
    #####:  900:	    state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
    #####:  901:	    state->discardCount[currentPlayer]++;
    #####:  902:	    for (;p < state->handCount[currentPlayer]; p++){
    #####:  903:	      state->hand[currentPlayer][p] = state->hand[currentPlayer][p+1];
        -:  904:	    }
    #####:  905:	    state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
    #####:  906:	    state->handCount[currentPlayer]--;
    #####:  907:	    card_not_discarded = 0;//Exit the loop
        -:  908:	  }
    #####:  909:	  else if (p > state->handCount[currentPlayer]){
        -:  910:	    if(DEBUG) {
        -:  911:	      printf("No estate cards in your hand, invalid choice\n");
        -:  912:	      printf("Must gain an estate if there are any\n");
        -:  913:	    }
    #####:  914:	    if (supplyCount(estate, state) > 0){
    #####:  915:	      gainCard(estate, state, 0, currentPlayer);
    #####:  916:	      state->supplyCount[estate]--;//Decrement estates
    #####:  917:	      if (supplyCount(estate, state) == 0){
    #####:  918:		isGameOver(state);
        -:  919:	      }
        -:  920:	    }
    #####:  921:	    card_not_discarded = 0;//Exit the loop
        -:  922:	  }
        -:  923:			    
        -:  924:	  else{
    #####:  925:	    p++;//Next card
        -:  926:	  }
        -:  927:	}
        -:  928:      }
        -:  929:			    
        -:  930:      else{
    #####:  931:	if (supplyCount(estate, state) > 0){
    #####:  932:	  gainCard(estate, state, 0, currentPlayer);//Gain an estate
    #####:  933:	  state->supplyCount[estate]--;//Decrement Estates
    #####:  934:	  if (supplyCount(estate, state) == 0){
    #####:  935:	    isGameOver(state);
        -:  936:	  }
        -:  937:	}
        -:  938:      }
        -:  939:	    
        -:  940:      
    #####:  941:      return 0;
        -:  942:		
        -:  943:    case great_hall:
    #####:  944:		return greathallfunc(currentPlayer, state, handPos);
        -:  945:		
        -:  946:    case minion:
        -:  947:      //+1 action
    #####:  948:      state->numActions++;
        -:  949:			
        -:  950:      //discard card from hand
    #####:  951:      discardCard(handPos, currentPlayer, state, 0);
        -:  952:			
    #####:  953:      if (choice1)		//+2 coins
        -:  954:	{
    #####:  955:	  state->coins = state->coins + 2;
        -:  956:	}
        -:  957:			
    #####:  958:      else if (choice2)		//discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
        -:  959:	{
        -:  960:	  //discard hand
    #####:  961:	  while(numHandCards(state) > 0)
        -:  962:	    {
    #####:  963:	      discardCard(handPos, currentPlayer, state, 0);
        -:  964:	    }
        -:  965:				
        -:  966:	  //draw 4
    #####:  967:	  for (i = 0; i < 4; i++)
        -:  968:	    {
    #####:  969:	      drawCard(currentPlayer, state);
        -:  970:	    }
        -:  971:				
        -:  972:	  //other players discard hand and redraw if hand size > 4
    #####:  973:	  for (i = 0; i < state->numPlayers; i++)
        -:  974:	    {
    #####:  975:	      if (i != currentPlayer)
        -:  976:		{
    #####:  977:		  if ( state->handCount[i] > 4 )
        -:  978:		    {
        -:  979:		      //discard hand
    #####:  980:		      while( state->handCount[i] > 0 )
        -:  981:			{
    #####:  982:			  discardCard(handPos, i, state, 0);
        -:  983:			}
        -:  984:							
        -:  985:		      //draw 4
    #####:  986:		      for (j = 0; j < 4; j++)
        -:  987:			{
    #####:  988:			  drawCard(i, state);
        -:  989:			}
        -:  990:		    }
        -:  991:		}
        -:  992:	    }
        -:  993:				
        -:  994:	}
    #####:  995:      return 0;
        -:  996:		
        -:  997:    case steward:
    #####:  998:      if (choice1 == 1)
        -:  999:	{
        -: 1000:	  //+2 cards
    #####: 1001:	  drawCard(currentPlayer, state);
    #####: 1002:	  drawCard(currentPlayer, state);
        -: 1003:	}
    #####: 1004:      else if (choice1 == 2)
        -: 1005:	{
        -: 1006:	  //+2 coins
    #####: 1007:	  state->coins = state->coins + 2;
        -: 1008:	}
        -: 1009:      else
        -: 1010:	{
        -: 1011:	  //trash 2 cards in hand
    #####: 1012:	  discardCard(choice2, currentPlayer, state, 1);
    #####: 1013:	  discardCard(choice3, currentPlayer, state, 1);
        -: 1014:	}
        -: 1015:			
        -: 1016:      //discard card from hand
    #####: 1017:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1018:      return 0;
        -: 1019:		
        -: 1020:    case tribute:
    #####: 1021:      if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) <= 1){
    #####: 1022:	if (state->deckCount[nextPlayer] > 0){
    #####: 1023:	  tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1024:	  state->deckCount[nextPlayer]--;
        -: 1025:	}
    #####: 1026:	else if (state->discardCount[nextPlayer] > 0){
    #####: 1027:	  tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer]-1];
    #####: 1028:	  state->discardCount[nextPlayer]--;
        -: 1029:	}
        -: 1030:	else{
        -: 1031:	  //No Card to Reveal
        -: 1032:	  if (DEBUG){
        -: 1033:	    printf("No cards to reveal\n");
        -: 1034:	  }
        -: 1035:	}
        -: 1036:      }
        -: 1037:	    
        -: 1038:      else{
    #####: 1039:	if (state->deckCount[nextPlayer] == 0){
    #####: 1040:	  for (i = 0; i < state->discardCount[nextPlayer]; i++){
    #####: 1041:	    state->deck[nextPlayer][i] = state->discard[nextPlayer][i];//Move to deck
    #####: 1042:	    state->deckCount[nextPlayer]++;
    #####: 1043:	    state->discard[nextPlayer][i] = -1;
    #####: 1044:	    state->discardCount[nextPlayer]--;
        -: 1045:	  }
        -: 1046:			    
    #####: 1047:	  shuffle(nextPlayer,state);//Shuffle the deck
        -: 1048:	} 
    #####: 1049:	tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1050:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1051:	state->deckCount[nextPlayer]--;
    #####: 1052:	tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer]-1];
    #####: 1053:	state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
    #####: 1054:	state->deckCount[nextPlayer]--;
        -: 1055:      }    
        -: 1056:		       
    #####: 1057:      if (tributeRevealedCards[0] == tributeRevealedCards[1]){//If we have a duplicate card, just drop one 
    #####: 1058:	state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
    #####: 1059:	state->playedCardCount++;
    #####: 1060:	tributeRevealedCards[1] = -1;
        -: 1061:      }
        -: 1062:
    #####: 1063:      for (i = 0; i <= 2; i ++){
    #####: 1064:	if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold){//Treasure cards
    #####: 1065:	  state->coins += 2;
        -: 1066:	}
        -: 1067:		    
    #####: 1068:	else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall){//Victory Card Found
    #####: 1069:	  drawCard(currentPlayer, state);
    #####: 1070:	  drawCard(currentPlayer, state);
        -: 1071:	}
        -: 1072:	else{//Action Card
    #####: 1073:	  state->numActions = state->numActions + 2;
        -: 1074:	}
        -: 1075:      }
        -: 1076:	    
    #####: 1077:      return 0;
        -: 1078:		
        -: 1079:    case ambassador:
    #####: 1080:      j = 0;		//used to check if player has enough cards to discard
        -: 1081:
    #####: 1082:      if (choice2 > 2 || choice2 < 0)
        -: 1083:	{
    #####: 1084:	  return -1;				
        -: 1085:	}
        -: 1086:
    #####: 1087:      if (choice1 == handPos)
        -: 1088:	{
    #####: 1089:	  return -1;
        -: 1090:	}
        -: 1091:
    #####: 1092:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1093:	{
    #####: 1094:	  if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
        -: 1095:	    {
    #####: 1096:	      j++;
        -: 1097:	    }
        -: 1098:	}
    #####: 1099:      if (j < choice2)
        -: 1100:	{
    #####: 1101:	  return -1;				
        -: 1102:	}
        -: 1103:
        -: 1104:      if (DEBUG) 
        -: 1105:	printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1106:
        -: 1107:      //increase supply count for choosen card by amount being discarded
    #####: 1108:      state->supplyCount[state->hand[currentPlayer][choice1]] += choice2;
        -: 1109:			
        -: 1110:      //each other player gains a copy of revealed card
    #####: 1111:      for (i = 0; i < state->numPlayers; i++)
        -: 1112:	{
    #####: 1113:	  if (i != currentPlayer)
        -: 1114:	    {
    #####: 1115:	      gainCard(state->hand[currentPlayer][choice1], state, 0, i);
        -: 1116:	    }
        -: 1117:	}
        -: 1118:
        -: 1119:      //discard played card from hand
    #####: 1120:      discardCard(handPos, currentPlayer, state, 0);			
        -: 1121:
        -: 1122:      //trash copies of cards returned to supply
    #####: 1123:      for (j = 0; j < choice2; j++)
        -: 1124:	{
    #####: 1125:	  for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1126:	    {
    #####: 1127:	      if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
        -: 1128:		{
    #####: 1129:		  discardCard(i, currentPlayer, state, 1);
    #####: 1130:		  break;
        -: 1131:		}
        -: 1132:	    }
        -: 1133:	}			
        -: 1134:
    #####: 1135:      return 0;
        -: 1136:		
        -: 1137:    case cutpurse:
        -: 1138:
    #####: 1139:      updateCoins(currentPlayer, state, 2);
    #####: 1140:      for (i = 0; i < state->numPlayers; i++)
        -: 1141:	{
    #####: 1142:	  if (i != currentPlayer)
        -: 1143:	    {
    #####: 1144:	      for (j = 0; j < state->handCount[i]; j++)
        -: 1145:		{
    #####: 1146:		  if (state->hand[i][j] == copper)
        -: 1147:		    {
    #####: 1148:		      discardCard(j, i, state, 0);
    #####: 1149:		      break;
        -: 1150:		    }
    #####: 1151:		  if (j == state->handCount[i])
        -: 1152:		    {
    #####: 1153:		      for (k = 0; k < state->handCount[i]; k++)
        -: 1154:			{
        -: 1155:			  if (DEBUG)
        -: 1156:			    printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
        -: 1157:			}	
    #####: 1158:		      break;
        -: 1159:		    }		
        -: 1160:		}
        -: 1161:					
        -: 1162:	    }
        -: 1163:				
        -: 1164:	}				
        -: 1165:
        -: 1166:      //discard played card from hand
    #####: 1167:      discardCard(handPos, currentPlayer, state, 0);			
        -: 1168:
    #####: 1169:      return 0;
        -: 1170:
        -: 1171:		
        -: 1172:    case embargo: 
        -: 1173:      //+2 Coins
    #####: 1174:      state->coins = state->coins + 2;
        -: 1175:			
        -: 1176:      //see if selected pile is in play
    #####: 1177:      if ( state->supplyCount[choice1] == -1 )
        -: 1178:	{
    #####: 1179:	  return -1;
        -: 1180:	}
        -: 1181:			
        -: 1182:      //add embargo token to selected supply pile
    #####: 1183:      state->embargoTokens[choice1]++;
        -: 1184:			
        -: 1185:      //trash card
    #####: 1186:      discardCard(handPos, currentPlayer, state, 1);		
    #####: 1187:      return 0;
        -: 1188:		
        -: 1189:    case outpost:
        -: 1190:      //set outpost flag
    #####: 1191:      state->outpostPlayed++;
        -: 1192:			
        -: 1193:      //discard card
    #####: 1194:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1195:      return 0;
        -: 1196:		
        -: 1197:    case salvager:
        -: 1198:      //+1 buy
    #####: 1199:      state->numBuys++;
        -: 1200:			
    #####: 1201:      if (choice1)
        -: 1202:	{
        -: 1203:	  //gain coins equal to trashed card
    #####: 1204:	  state->coins = state->coins + getCost( handCard(choice1, state) );
        -: 1205:	  //trash card
    #####: 1206:	  discardCard(choice1, currentPlayer, state, 1);	
        -: 1207:	}
        -: 1208:			
        -: 1209:      //discard card
    #####: 1210:      discardCard(handPos, currentPlayer, state, 0);
    #####: 1211:      return 0;
        -: 1212:		
        -: 1213:    case sea_hag:
    #####: 1214:      for (i = 0; i < state->numPlayers; i++){
    #####: 1215:	if (i != currentPlayer){
    #####: 1216:	  state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];			    state->deckCount[i]--;
    #####: 1217:	  state->discardCount[i]++;
    #####: 1218:	  state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
        -: 1219:	}
        -: 1220:      }
    #####: 1221:      return 0;
        -: 1222:		
        -: 1223:    case treasure_map:
        -: 1224:      //search hand for another treasure_map
    #####: 1225:      index = -1;
    #####: 1226:      for (i = 0; i < state->handCount[currentPlayer]; i++)
        -: 1227:	{
    #####: 1228:	  if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
        -: 1229:	    {
    #####: 1230:	      index = i;
    #####: 1231:	      break;
        -: 1232:	    }
        -: 1233:	}
    #####: 1234:      if (index > -1)
        -: 1235:	{
        -: 1236:	  //trash both treasure cards
    #####: 1237:	  discardCard(handPos, currentPlayer, state, 1);
    #####: 1238:	  discardCard(index, currentPlayer, state, 1);
        -: 1239:
        -: 1240:	  //gain 4 Gold cards
    #####: 1241:	  for (i = 0; i < 4; i++)
        -: 1242:	    {
    #####: 1243:	      gainCard(gold, state, 1, currentPlayer);
        -: 1244:	    }
        -: 1245:				
        -: 1246:	  //return success
    #####: 1247:	  return 1;
        -: 1248:	}
        -: 1249:			
        -: 1250:      //no second treasure_map found in hand
    #####: 1251:      return -1;
        -: 1252:    }
        -: 1253:	
    #####: 1254:  return -1;
        -: 1255:}
        -: 1256:
      500: 1257:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1258:{
        -: 1259:	
        -: 1260:  //if card is not trashed, added to Played pile 
      500: 1261:  if (trashFlag < 1)
        -: 1262:    {
        -: 1263:      //add card to played pile
      500: 1264:      state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos]; 
      500: 1265:      state->playedCardCount++;
        -: 1266:    }
        -: 1267:	
        -: 1268:  //set played card to -1
      500: 1269:  state->hand[currentPlayer][handPos] = -1;
        -: 1270:	
        -: 1271:  //remove card from player's hand
      500: 1272:  if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
        -: 1273:    {
        -: 1274:      //reduce number of cards in hand
        3: 1275:      state->handCount[currentPlayer]--;
        -: 1276:    }
      497: 1277:  else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
        -: 1278:    {
        -: 1279:      //reduce number of cards in hand
        1: 1280:      state->handCount[currentPlayer]--;
        -: 1281:    }
        -: 1282:  else 	
        -: 1283:    {
        -: 1284:      //replace discarded card with last card in hand
      496: 1285:      state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1286:      //set last card to -1
      496: 1287:      state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1288:      //reduce number of cards in hand
      496: 1289:      state->handCount[currentPlayer]--;
        -: 1290:    }
        -: 1291:	
      500: 1292:  return 0;
        -: 1293:}
        -: 1294:
    #####: 1295:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1296:{
        -: 1297:  //Note: supplyPos is enum of choosen card
        -: 1298:	
        -: 1299:  //check if supply pile is empty (0) or card is not used in game (-1)
    #####: 1300:  if ( supplyCount(supplyPos, state) < 1 )
        -: 1301:    {
    #####: 1302:      return -1;
        -: 1303:    }
        -: 1304:	
        -: 1305:  //added card for [whoseTurn] current player:
        -: 1306:  // toFlag = 0 : add to discard
        -: 1307:  // toFlag = 1 : add to deck
        -: 1308:  // toFlag = 2 : add to hand
        -: 1309:
    #####: 1310:  if (toFlag == 1)
        -: 1311:    {
    #####: 1312:      state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1313:      state->deckCount[player]++;
        -: 1314:    }
    #####: 1315:  else if (toFlag == 2)
        -: 1316:    {
    #####: 1317:      state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1318:      state->handCount[player]++;
        -: 1319:    }
        -: 1320:  else
        -: 1321:    {
    #####: 1322:      state->discard[player][ state->discardCount[player] ] = supplyPos;
    #####: 1323:      state->discardCount[player]++;
        -: 1324:    }
        -: 1325:	
        -: 1326:  //decrease number in supply pile
    #####: 1327:  state->supplyCount[supplyPos]--;
        -: 1328:	 
    #####: 1329:  return 0;
        -: 1330:}
        -: 1331:
     1000: 1332:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1333:{
        -: 1334:  int i;
        -: 1335:	
        -: 1336:  //reset coin count
     1000: 1337:  state->coins = 0;
        -: 1338:
        -: 1339:  //add coins for each Treasure card in player's hand
   130312: 1340:  for (i = 0; i < state->handCount[player]; i++)
        -: 1341:    {
   129312: 1342:      if (state->hand[player][i] == copper)
        -: 1343:	{
    17271: 1344:	  state->coins += 1;
        -: 1345:	}
   112041: 1346:      else if (state->hand[player][i] == silver)
        -: 1347:	{
      120: 1348:	  state->coins += 2;
        -: 1349:	}
   111921: 1350:      else if (state->hand[player][i] == gold)
        -: 1351:	{
    #####: 1352:	  state->coins += 3;
        -: 1353:	}	
        -: 1354:    }	
        -: 1355:
        -: 1356:  //add bonus
     1000: 1357:  state->coins += bonus;
        -: 1358:
     1000: 1359:  return 0;
        -: 1360:}
        -: 1361:
        -: 1362:
        -: 1363://end of dominion.c
        -: 1364:
